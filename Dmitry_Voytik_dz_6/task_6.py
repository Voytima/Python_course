# 6.Реализовать простую систему хранения данных о суммах продаж булочной.
# Должно быть два скрипта с интерфейсом командной строки: для записи данных и для вывода на экран записанных данных.
# При записи передавать из командной строки значение суммы продаж.
# Для чтения данных реализовать в командной строке следующую логику:
# 1) просто запуск скрипта — выводить все записи;
# 2) запуск скрипта с одним параметром-числом — выводить все записи с номера, равного этому числу, до конца;
# 3) запуск скрипта с двумя числами — выводить записи, начиная с номера, равного первому числу, по номер,
# равный второму числу, включительно.
# Подумать, как избежать чтения всего файла при реализации второго и третьего случаев.
# Данные хранить в файле bakery.csv в кодировке utf-8. Нумерация записей начинается с 1.
"""Для записи данных используем первый скрипт, а для вывода данных о продажах - второй"""
# --------------------------------------------------1-----------------------------------------------------------
from sys import argv

with open('bakery.csv', 'a', encoding='utf-8') as xxx:
    with open('bakery.csv', 'r', encoding='utf-8') as yyy:
        if len(argv) > 1 and [i for i in argv[1:] if '.' in i and i.replace('.', '').isdigit()]:
            print(f"{round(float(argv[1]), 3)}", file=xxx)
        else:
            print(yyy.read())
# --------------------------------------------------2-----------------------------------------------------------
with open('bakery.csv', 'r', encoding='utf-8') as yyy:
    if 1 < len(argv) < 4 and [i for i in argv[1:] if i.isdigit()]:
        if len(argv) == 3:
            first_val, last_val = map(int, argv[1:])
            print(*(b for a, b in enumerate(yyy) if first_val - 1 <= a < last_val), sep="")
        else:
            print(*(b for a, b in enumerate(yyy) if a >= int(argv[1]) - 1), sep="")
    else:
        print(yyy.read())
